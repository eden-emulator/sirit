name: CI

on:
  workflow_call:
    inputs:
      version:
        description: 'Sirit version'
        type: string
        default: 'test'

env:
  VERSION: "${{ inputs.version }}"

jobs:
  desktop:
    name: "${{ matrix.platform }} ${{ matrix.arch }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            arch: amd64
            msvc_arch: amd64
            platform: windows

          - os: windows-11-arm
            arch: arm64
            msvc_arch: amd64_arm64
            platform: windows

          - os: ubuntu-latest
            arch: amd64
            platform: linux

          - os: ubuntu-24.04-arm
            arch: aarch64
            platform: linux

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
        with:
          arch: ${{ matrix.arch }}

      - name: Configure
        shell: bash
        run: |
          cmake -S . -B build -DSIRIT_BUILD_STATIC=ON -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        shell: bash
        run: |
          cmake --build build -j$(nproc)

      - name: Package
        shell: bash
        run: |
          PLATFORM=${{ matrix.platform }} ARCH=${{ matrix.arch }} ./.ci/package.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}
          path: artifacts/*

  android:
    name: "Android"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    env:
      PLATFORM: android

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: android-actions/setup-android@v3

      - name: Configure
        shell: bash
        run: |
          sdkmanager --install "cmake;3.31.6"
          cmake \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-21 \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_SYSTEM_NAME=Android \
            -DCMAKE_ANDROID_NDK=$ANDROID_NDK_ROOT \
            -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a \
            -DCMAKE_ANDROID_STL_TYPE=c++_shared \
            -G Ninja \
            -DSIRIT_BUILD_STATIC=ON \
            -S . -B build

      - name: Build
        shell: bash
        run: |
          cmake --build build -j$(nproc)

      - name: Package
        shell: bash
        run: |
          ./.ci/package.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: artifacts/*

  macos:
    name: "macOS"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    env:
      PLATFORM: macos
      ARCH: universal

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Configure
        shell: bash
        run: |
          cmake -S . -B build -DSIRIT_BUILD_STATIC=ON -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DCMAKE_BUILD_TYPE=Release -G Ninja

      - name: Build
        shell: bash
        run: |
          cmake --build build -j$(nproc)

      - name: Package
        shell: bash
        run: |
          ./.ci/package.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-universal
          path: artifacts/*

  unix:
    name: "${{ matrix.platform }} ${{ matrix.arch }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: solaris
            runs-on: ubuntu-latest
            arch: amd64
            vm-arch: x86_64

          - platform: freebsd
            runs-on: ubuntu-latest
            arch: amd64
            vm-arch: x86_64

    env:
      PLATFORM: ${{ matrix.platform }}
      ARCH: ${{ matrix.arch }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Disable man-db updates
        run: sudo rm /var/lib/man-db/auto-update

      - name: Build (Solaris)
        if: matrix.platform == 'solaris'
        uses: vmactions/omnios-vm@v1.1.1
        with:
          arch: ${{ matrix.vm-arch }}
          release: "r151054"
          usesh: true
          envs: 'PLATFORM ARCH GITHUB_WORKSPACE VERSION'
          prepare: |
            pkg install cmake bash ninja gcc14
          run: |
            chmod a+x ./.ci/package.sh ./.ci/sums.sh
            cmake -S . -B build -DSIRIT_BUILD_STATIC=ON -G Ninja -DCMAKE_BUILD_TYPE=Release
            cmake --build build -j$(nproc)
            ./.ci/package.sh

      - name: Build (FreeBSD)
        if: matrix.platform == 'freebsd'
        uses: vmactions/freebsd-vm@v1.2.2
        with:
          arch: ${{ matrix.vm-arch }}
          usesh: true
          envs: 'PLATFORM ARCH GITHUB_WORKSPACE VERSION'
          prepare: |
            pkg install -y cmake bash ninja
          run: |
            chmod a+x ./.ci/package.sh ./.ci/sums.sh
            cmake -S . -B build -DSIRIT_BUILD_STATIC=ON -G Ninja -DCMAKE_BUILD_TYPE=Release
            cmake --build build -j$(nproc)
            ./.ci/package.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}
          path: artifacts/*